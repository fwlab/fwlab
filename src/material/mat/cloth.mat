material {
    name : cloth_material,
    requires : [ uv0 ],
    shadingModel : cloth,
    parameters : [
        { type : float4, name : baseColor },
        { type : float, name : roughness },
        { type: float3, name: sheenColor },
        { type: float3, name: subsurfaceColor },
        { type: float, name: clearCoat },
        { type: float, name: clearCoatRoughness },
        { name: anisotropy, type: float },
        { type: float3, name: anisotropyDirection },
        { type: float, name: ambientOcclusion },
        { type: float3, name: normal },
        { type: float3, name: bentNormal },
        { type: float3, name: clearCoatNormal },
        { type: float4, name: emissive },
        { type: float4, name: postLightingColor },
        { type: float, name: transmission },
        { type: float3, name: absorption },
        { type: float, name: microThickness },
        { type: float, name: thickness },

        { type: bool, name: enableMap },
        { type : sampler2d, name : map }
    ],
}

fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);
        
        if (materialParams.enableMap) {
            material.baseColor = materialParams.baseColor * texture(materialParams_map, getUV0());
        } else {
            material.baseColor = materialParams.baseColor;
        }

        material.roughness = materialParams.roughness;

        material.sheenColor = materialParams.sheenColor;

        material.subsurfaceColor = materialParams.subsurfaceColor;

        material.clearCoat = materialParams.clearCoat;
        material.clearCoatRoughness = materialParams.clearCoatRoughness;

        material.anisotropy = materialParams.anisotropy;
        material.anisotropyDirection = materialParams.anisotropyDirection;
        material.ambientOcclusion = materialParams.ambientOcclusion;
        // material.normal = materialParams.normal;
        // material.bentNormal = materialParams.bentNormal;
        // material.clearCoatNormal = materialParams.clearCoatNormal;
        material.emissive = materialParams.emissive;
        // material.postLightingColor = materialParams.postLightingColor;
        // material.transmission = materialParams.transmission;
        // material.absorption = materialParams.absorption;
        // material.microThickness = materialParams.microThickness; // refractionType: thin
        // material.thickness = materialParams.thickness; // refractionType: solid
    }
}
